version: "2"

services:
  app:
    image: ${DTR_URL}/demo/docker-demo:${TAG}
    restart: always
    entrypoint: /bin/bash
    command: -c "sleep 5 && go-wrapper run" # sleep because the postgres container isn't ready on first start
    environment:
      - "constraint:provider==${PROVIDER}"
      - "TITLE=Docker Demo-${ENVIRONMENT}"
      - "DB_HOST=db"
      - "DB_PORT=5432"
      - "DB_USER=${DB_USER}"
      - "DB_PASS=${DB_PASS}"
      - "DB_NAME=${DB_NAME}"
      - "DB_SSL_MODE=disable"
      - "INTERLOCK_DATA={\"hostname\":\"docker-${ENVIRONMENT}\",\"domain\":\"${DOMAIN_NAME}\"}"
    networks:
      - docker-demo
    ports:
      - "8080"
    expose:
      - "8080"
    labels:
      - "com.docker.ucp.access.label=${COMPOSE_PROJECT}"
      - "interlock.hostname=docker-${ENVIRONMENT}"
      - "interlock.domain=${DOMAIN_NAME}"
  db:
    image: ${DTR_URL}/official/postgres:latest
    restart: always
    environment:
      - "POSTGRES_USER=${DB_USER}"
      - "POSTGRES_PASSWORD=${DB_PASS}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - docker-demo
    expose:
      - "5432"
    labels:
      - "com.docker.ucp.access.label=${COMPOSE_PROJECT}"

volumes:
  postgres-data:
    driver: local

networks:
  docker-demo:
    driver: overlay
